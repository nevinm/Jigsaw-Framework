<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeEffects.Rule</name>
    </assembly>
    <members>
        <member name="T:CodeEffects.Rule.Attributes.ExcludeFromEvaluationAttribute">
            <summary>
            This attribute is used to exclude class members from rule evaluation and creation processes
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Core.GetRuleDelegate">
            <summary>
            Declares a signature of a method that takes rule ID and returns Rule XML as a string.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Models.RuleModel">
            <summary>
            Business rule model class
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.#ctor">
            <summary>
            Empty public c-tor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.Create(System.String,System.String)">
            <summary>
            Returns a new instance of RuleModel class.
            </summary>
            <param name="sourceAssembly">Fully qualified name of the assembly that declares the source object</param>
            <param name="sourceType">Full name of source object's type</param>
            <returns>Instance of RuleModel class</returns>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.Create(System.String)">
            <summary>
            Returns a new instance of RuleModel class.
            </summary>
            <param name="sourceXmlFile">Full path to a Source XML file</param>
            <returns>Instance of RuleModel class</returns>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.Create(System.Type)">
            <summary>
            Returns a new instance of RuleModel class.
            </summary>
            <param name="sourceType">Type that declares the source object</param>
            <returns>Instance of RuleModel class</returns>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.Create(System.String,System.String,System.String)">
            <summary>
            Returns a new instance of RuleModel class.
            </summary>
            <param name="ruleXml">Rule XML document as string</param>
            <param name="sourceAssembly">Fully qualified name of the assembly that declares the source object</param>
            <param name="sourceType">Full name of source object's type</param>
            <returns>Instance of RuleModel class</returns>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.Create(System.String,System.Xml.XmlDocument)">
            <summary>
            Returns a new instance of RuleModel class.
            </summary>
            <param name="ruleXml">Rule XML document as string</param>
            <param name="sourceXml">Full path to a Source XML file</param>
            <returns>Instance of RuleModel class</returns>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.Create(System.String,System.Type)">
            <summary>
            Returns a new instance of RuleModel class.
            </summary>
            <param name="ruleXml">Rule XML document as string</param>
            <param name="sourceType">Type that declares the source object</param>
            <returns>Instance of RuleModel class</returns>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.GetRuleXml">
            <summary>
            Returns string representation of Rule XML. Calling this method is the only way to obtain Rule XML in Web Rule.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.IsValid">
            <summary>
            Returns a value indicating if the rule is valid. This overload does not check the current rule for circular references.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.IsValid(CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Returns a value indicating if the rule is valid.
            </summary>
            <param name="getRuleDelegate">Delegate to a method that returns a rule by its ID. If this parameter is not null, Web Rule checks the current rule for circular references. See the Reusable Rules documentation topic for details</param>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.IsEmpty">
            <summary>
            Returns a value indicating if the rule is empty
            </summary>
            <returns></returns>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.BindSource(System.String,System.String)">
            <summary>
            Binds instance of the RuleModel class to source object
            </summary>
            <param name="sourceAssembly">Fully qualified name of the assembly that declares the source object</param>
            <param name="sourceType">Full name of source object's type</param>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.BindSource(System.String)">
            <summary>
            Binds instance of the RuleModel class to source object
            </summary>
            <param name="sourceXmlFile">Full path to a Source XML file</param>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.BindSource(System.Type)">
            <summary>
            Binds instance of the RuleModel class to source object
            </summary>
            <param name="sourceType">Type that declares the source object</param>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleModel.BindSource(System.Xml.XmlDocument)">
            <summary>
            Binds instance of the RuleModel class to source object
            </summary>
            <param name="sourceXml">Source XML document</param>
        </member>
        <member name="P:CodeEffects.Rule.Models.RuleModel.Id">
            <summary>
            Gets or sets ID of the rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Models.RuleModel.Name">
            <summary>
            Gets or sets the name of the rule. Users set this value by
            typing the rule's name into the Name text box on the Tool Bar
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Models.RuleModel.Desc">
            <summary>
            Gets or sets the description of the rule. Users set this value by
            typing the rule's description into the Description text box of the Tool Bar
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Models.RuleModel.SkipNameValidation">
            <summary>
            Gets or sets the value indicating if Web Rule should disallow rules with empty names
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Models.RuleModel.Command">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Models.RuleModel.IsLoadedRuleOfEvalType">
            <summary>
            Gets or sets the value indicating if the rule is of evaluation type.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Models.RuleModel.Elements">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Models.RuleModel.Invalids">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.ParameterAttribute">
            <summary>
            Allows customization of in-rule method and rule action parameters
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ParameterAttribute.#ctor">
            <summary>
            Empty public c-tor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ParameterAttribute.#ctor(CodeEffects.Rule.Common.ValueInputType)">
            <summary>
            Public c-tor
            </summary>
            <param name="valueInputType">Input type that user can use to set the value of this parameter</param>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ParameterAttribute.ValueInputType">
            <summary>
            Gets or sets the input type that user can use to set the value of this parameter
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ParameterAttribute.Description">
            <summary>
            Gets or sets the description of this parameter. Users can view this description
            by hovering the mouse over the parameter in the Rule Editor. 
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ParameterAttribute.Min">
            <summary>
            Gets or sets the minimum value that user can input for this parameter.
            Used by numeric types only; ignored by all other types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ParameterAttribute.Max">
            <summary>
            For numeric types, gets or sets the maximum value that user can input for this parameter.
            For string types, gets the maximum length of the string that user can input for this parameter.
            Ignored by all other types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ParameterAttribute.DateTimeFormat">
            <summary>
            For date and time types, gets or sets the .NET DateTime format string
            that is used by Web Rule to display the value of this parameter in UI.
            Rule evaluation does not depend on this property.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ParameterAttribute.ConstantValue">
            <summary>
            Get or sets a constant value for this parameter. If this value is set,
            this parameter will be hidden from users. This constant value is used
            by rule evaluation.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ParameterAttribute.DataSourceName">
            <summary>
            Gets or sets the value of the unique name of Dynamic Menu Data Source.
            See Web Rule online documentation for details.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Core.EvaluatorBase">
            <summary>
            This class in not intended for public use
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Core.Evaluator">
            <summary>
            Provides rule evaluation functionality
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator.#ctor(System.Type,System.String,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Initializes a new instance of the Evaluator to a specified set of rules. A delegate of type GetRuleDelegate is used
            to request any rule that may be referenced inside another rule.
            </summary>
            <param name="rulesetXml">The XML containing one or more rules to be evaluated against objects.
            The XML ruleset must validate against http://rule.codeeffects.com/schemas/rule schema.</param>
            <param name="getRule">The delegate to a method used to retrieve external rules (rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the ruleset. If none are found
            an exception will be thrown.</param>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator.Evaluate(System.Object,System.String)">
            <summary>
            Executes (evaluates) the rule against the source object. If no id is provided,
            the first rule of the ruleset will be used.
            </summary>
            <param name="source">The object which needs to be evaluated. It acts as a source of data for the rule.</param>
            <param name="ruleId">An optional id of a rule. If there are more than one rule in the ruleset, you may evaluate a specific
            rule by providing its id. <remarks>Not to be confused with external rules referenced inside other rules. This rule must be present as a top
            level rule inside the ruleset or an exception will be thrown.</remarks></param>
            <returns>Returns boolean result of evaluation: true if successful, false otherwise.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator.Evaluate(System.Object,System.Int32)">
            <summary>
            Executes (evaluates) the specific rule against the source object. 
            </summary>
            <param name="source">The object which needs to be evaluated. It acts as a source of data for the rule.</param>
            <param name="ruleIndex">An index of a rule to be executed. If there are more than one rule in the ruleset, you may evaluate a specific
            rule by providing its index. <remarks>Not to be confused with external rules referenced inside other rules. This rule must be present as a top
            level rule inside the ruleset or exception wil be thrown.</remarks></param>
            <returns>Returns boolean result of evaluation: true if successful, false otherwise.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator.Evaluate(System.Object,CodeEffects.Rule.Core.EvaluationScope,System.Boolean)">
            <summary>
            Executes (evaluates) all rules in a ruleset based on scope against the source object. 
            </summary>
            <param name="source">The object which needs to be evaluated. It acts as a source of data for the rule.</param>
            <param name="scope">Scope determines a logical operator (AND, OR) to be used when executing rules.</param>
            <param name="shortCircuit">Short-circuting tells evaluator to stop as soon as scope is satisfied.
            If false, the evaluator will continue executing all rules even if answer is already known. Default is true.</param>
            <returns>Returns boolean result of evaluation: true if successful, false otherwise.</returns>
        </member>
        <member name="T:CodeEffects.Rule.Core.Evaluator`1">
            <summary>
            <para>Compiles and executes business rules against source objects.</para>
            <para>One or more rules may be combined into one single XML string. If a rule contains references to other external rules,
            the Evaluator will try to locate them among rules in the given XML or call a delegate, if one is provided. Rules then are
            compiled and stored in memory for future execution by Evaluate methods.</para>
            </summary>
            <remarks>See http://rule.codeeffects.com/schemas/rule/3 schema for information on full ruleset format.</remarks>
            <typeparam name="TSource">The type of a source object against which rules are evaluated.</typeparam>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator`1.#ctor(System.String,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Initializes a new instance of the Evaluator to a specified set of rules. A delegate of type GetRuleDelegate is used
            to request any rule that may be referenced inside another rule.
            </summary>
            <param name="rulesetXml">The XML containing one or more rules to be evaluated against objects.
            The XML ruleset must validate against http://rule.codeeffects.com/schemas/rule schema.</param>
            <param name="getRule">The delegate to a method used to retrieve external rules (rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the ruleset. If none are found
            an exception will be thrown.</param>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator`1.Evaluate(`0,System.String)">
            <summary>
            Executes (evaluates) the rule against the source object. If no id is provided,
            the first rule of the ruleset will be used.
            </summary>
            <param name="source">The object which needs to be evaluated. It acts as a source of data for the rule.</param>
            <param name="ruleId">An optional id of a rule. If there are more than one rule in the ruleset, you may evaluate a specific
            rule by providing its id. <remarks>Not to be confused with external rules referenced inside other rules. This rule must be present as a top
            level rule inside the ruleset or an exception will be thrown.</remarks></param>
            <returns>Returns boolean result of evaluation: true if successful, false otherwise.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator`1.Evaluate(`0,System.Int32)">
            <summary>
            Executes (evaluates) the specific rule against the source object. 
            </summary>
            <param name="source">The object which needs to be evaluated. It acts as a source of data for the rule.</param>
            <param name="ruleIndex">An index of a rule to be executed. If there are more than one rule in the ruleset, you may evaluate a specific
            rule by providing its index. <remarks>Not to be confused with external rules referenced inside other rules. This rule must be present as a top
            level rule inside the ruleset or exception will be thrown.</remarks></param>
            <returns>Returns boolean result of evaluation: true if successful, false otherwise.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator`1.Evaluate(`0,CodeEffects.Rule.Core.EvaluationScope,System.Boolean)">
            <summary>
            Executes (evaluates) all rules in a ruleset based on scope against the source object. 
            </summary>
            <param name="source">The object which needs to be evaluated. It acts as a source of data for the rule.</param>
            <param name="scope">Scope determines a logical operator (AND, OR) to be used when executing rules.</param>
            <param name="shortCircuit">Short-circuting tells evaluator to stop as soon as scope is satisfied.
            If false, the evaluator will continue executing all rules even if answer is already known. Default is true.</param>
            <returns>Returns boolean result of evaluation: true if successful, false otherwise.</returns>
        </member>
        <member name="T:CodeEffects.Rule.Core.DynamicEvaluator">
            <summary>
            Provides functionality for dynamic rule evaluation
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Mvc.RuleEditorBuilder">
            <summary>
            Provides a wrapper for the RuleEditor class
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.#ctor(System.Web.Mvc.ViewContext)">
            <summary>
            Public constructor of the RuleEditorBuilder class
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Id(System.String)">
            <summary>
            Sets the value of the server ID of the RuleEditor class. Used to distinguish this instance of
            the RuleEditor from all other instances that may be declared on the same view.
            </summary>
            <param name="id">Server ID of this instance of the RuleEditor</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.SaveAction(System.String,System.String)">
            <summary>
            Sets the value of the SaveAction property of the underlying instance of RuleEditor class. This property is
            ignored if ShowToolBar is set to False. 
            </summary>
            <param name="saveAction">Name of the Save action</param>
            <param name="saveController">Name of the controller</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.DeleteAction(System.String,System.String)">
            <summary>
            Sets the value of the DeleteAction property of the underlying instance of RuleEditor class. This property is
            ignored if ShowToolBar is set to False. 
            </summary>
            <param name="deleteAction">Name of the Delete action</param>
            <param name="deleteController">Name of the controller</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.LoadAction(System.String,System.String)">
            <summary>
            Sets the value of the LoadAction property of the underlying instance of RuleEditor class. This property is
            ignored if ShowToolBar is set to False. 
            </summary>
            <param name="loadAction">Name of the Load action</param>
            <param name="loadController">Name of the controller</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ToolBarRules(System.Collections.Generic.List{CodeEffects.Rule.Common.MenuItem})">
            <summary>
            Sets the value of the ToolBarRules property of the underlying instance of RuleEditor class. The rules
            from this collection appear in the Rules menu of the Tool Bar. The collection can contain
            rules of all types. This property is ignored if ShowToolBar is set to False. 
            </summary>
            <param name="toolBarRules">List of rules</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ContextMenuRules(System.Collections.Generic.List{CodeEffects.Rule.Common.MenuItem})">
            <summary>
            Sets the value of the ContextMenuRules property of the underlying instance of RuleEditor class. The rules
            from this collection appear in the context menus of Web Rule as regular fields. Make sure
            that only rules of evaluation type are added to this list. This property is ignored if
            ShowToolBar is set to False. 
            </summary>
            <param name="contextMenuRules">List of rules</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Help(System.String)">
            <summary>
            Sets the value of the HelpXmlFile property of the underlying instance of RuleEditor class. HelpXmlFile
            property allows you to specify a Help XML file that contains different values for Help String messages, Tool Bar
            labels and validation error messages. This could be helpful for multilingual applications.
            </summary>
            <param name="helpXmlFilePath">Virtual path to the custom Help XML file</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Help(System.Xml.XmlDocument)">
            <summary>
            Sets the value of the HelpXml property of the underlying instance of RuleEditor class. HelpXml
            property allows you to specify a Help XML that contains different values for Help String messages, Tool Bar
            labels and validation error messages. This could be helpful for multilingual applications.
            </summary>
            <param name="helpXml">Xml document object of the custom help</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Rule(CodeEffects.Rule.Models.RuleModel)">
            <summary>
            Sets the value of the Rule property of the underlying instance of RuleEditor class.
            </summary>
            <param name="rule">Instance of the rule model</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ExcludedOperators(System.Collections.Generic.ICollection{CodeEffects.Rule.Models.Operator})">
            <summary>
            Sets the collection of excluded operators
            </summary>
            <param name="excludedOperators">Excluded operators</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.DataSources(System.Collections.Generic.ICollection{CodeEffects.Rule.Common.DataSourceHolder})">
            <summary>
            Sets the collection of named Dynamic Menu Data Sources
            </summary>
            <param name="dataSources">Data sources</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Theme(CodeEffects.Rule.Common.ThemeType)">
            <summary>
            Sets the value of the Theme property of the underlying instance of RuleEditor class.
            </summary>
            <param name="theme">One of the members of ThemeType enumerator</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Mode(CodeEffects.Rule.Common.RuleType)">
            <summary>
            Sets the value of the Mode property of the underlying instance of RuleEditor class.
            </summary>
            <param name="mode">One of the members of RuleType enumerator. Value of RuleType.Evaluation
            limits Web Rule UI to evaluation type rules only. Value of RuleType.Execution permits both
            execution and evaluation types.</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowHelpString(System.Boolean)">
            <summary>
            Sets the value of the ShowHelpString property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showHelpString">Value of False instructs Web Rule not to display the Help String.</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowLineDots(System.Boolean)">
            <summary>
            Sets the value of the ShowLineDots property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showLineDots">Value of True instructs Web Rule to display "line dots" at the beginning of
            each new line in the Rule Area</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowMenuOnRightArrowKey(System.Boolean)">
            <summary>
            Sets the value of the ShowMenuOnRightArrowKey property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showMenuOnRightArrowKey">Value of False instructs Web Rule not to display context menus when user presses the
            "right arrow" key while navigating the rule</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowMenuOnElementClicked(System.Boolean)">
            <summary>
            Sets the value of the ShowMenuOnElementClicked property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showMenuOnRightArrowKey">Value of False instructs Web Rule not to display context menus when user clicks rule elements</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowDescriptionsOnMouseHover(System.Boolean)">
            <summary>
            Sets the value of the ShowDescriptionsOnMouseHover property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showMenuOnRightArrowKey">Value of False instructs Web Rule not to display element descriptions</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowToolBar(System.Boolean)">
            <summary>
            Sets the value of the ShowToolBar property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showToolBar">Value of False instructs Web Rule not to display the Tool Bar.</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ClientOnly(System.Boolean)">
            <summary>
            Sets the value of the ClientOnly property of the underlying instance of RuleEditor class.
            </summary>
            <param name="clientOnly">Value of True sets Web Rule's UI to "client-only" mode</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.KeepDeclaredOrder(System.Boolean)">
            <summary>
            Sets the value of the KeepDeclaredOrder property of the underlying instance of RuleEditor class.
            </summary>
            <param name="clientOnly">Value of True instructs Web Rule to keep the order of fields in the menu the way they are declared in the source object</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Render">
            <summary>
            Renders Web Rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditorBuilder.Editor">
            <summary>
            Gets or sets an instance of the RuleEditor class
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Models.Operator">
            <summary>
            Used by Asp.RuleEditor and Mvc.RuleEditor classes to hold lists of excluded client operators.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Models.Operator.Type">
            <summary>
            Client type of the excluded operator
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Models.Operator.ExcludedOperator">
            <summary>
            List of excluded operators for defined client type
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.DataType">
            <summary>
            Data types used on the client by Web Rule
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.DataType.String">
            <summary>
            Represents String type on the client
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.DataType.Numeric">
            <summary>
            Represents all supported numeric types on the client
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.DataType.Date">
            <summary>
            Represents DateTime types on the client
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.DataType.Time">
            <summary>
            Represents TimeSpan types on the client
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.DataType.Bool">
            <summary>
            Represents Boolean type on the client
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.DataType.Enum">
            <summary>
            Represents enumerators on the client
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Core.RuleExtensions">
            <summary>
            Provides a set of static methods to apply business rules for objects that implement <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            <remarks>These methods use <see cref="T:CodeEffects.Rule.Core.Evaluator`1"/> class internally to apply business rules.</remarks>
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Core.RuleExtensions.Filter``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Filters the collection of source objects by applying a business rule. The rulesetXml is loaded into <see cref="T:CodeEffects.Rule.Core.Evaluator`1"/>
            and its rules are compiled and stored in memory. Then either the first rule in the ruleset or the one referenced by the rule id is evaluated
            against each object in the collection. Those source objects that pass the rule are returned as a new
            collection of type <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="TSource">An underlying source type of a generic enumerable collection.</typeparam>
            <param name="source">An enumerable collection of type <see cref="T:System.Collections.Generic.IEnumerable`1"/> that needs to be filtered.</param>
            <param name="rulesetXml">The XML containing one or more rules to be evaluated against source objects.
            The XML ruleset must validate against http://rule.codeeffects.com/schemas/rule schema.</param>
            <param name="ruleId">An optional id of a rule. If there are more than one rule in the ruleset, you may evaluate a specific
            rule by providing its id. <remarks>Not to be confused with external reusable rules referenced in rules inside of the rulesetXml.
            The rule with this id must be present as a top level rule inside the rulesetXml or exception will be thrown.</remarks></param>
            <param name="getRule">The delegate to a method used to retrieve external rules by id (reusable rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the rulesetXml. If none are found
            an exception will be thrown.</param>
            <returns>Returns a new <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of source objects that passed the rule evaluation.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.RuleExtensions.Filter``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Filters the collection of source objects by applying a business rule. The rulesetXml is loaded into <see cref="T:CodeEffects.Rule.Core.Evaluator`1"/>
            and its rules are compiled and stored in memory. Then either the first rule in the ruleset or the one referenced by the rule id is evaluated
            against each object in the collection. Those source objects that pass the rule are returned as a new
            collection of type <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="TSource">An underlying source type of a generic enumerable collection.</typeparam>
            <param name="source">An enumerable collection of type <see cref="T:System.Collections.Generic.IEnumerable`1"/> that needs to be filtered.</param>
            <param name="rulesetXml">The XML containing one or more rules to be evaluated against source objects.
            The XML ruleset must validate against http://rule.codeeffects.com/schemas/rule schema.</param>
            <param name="ruleIndex">A zero-based index of a rule to be executed. If there are more than one rule in the ruleset, you may evaluate a specific
            rule by providing its index. <remarks>Not to be confused with external reusable rules referenced in rules inside of the rulesetXml.
            The rule with this id must be present as a top level rule inside the rulesetXml or exception will be thrown.</remarks></param>
            <param name="getRule">The delegate to a method used to retrieve external rules by id (reusable rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the rulesetXml. If none are found
            an exception will be thrown.</param>
            <returns>Returns a new <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of source objects that passed the rule evaluation.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.RuleExtensions.Evaluate``1(``0,System.String,System.String,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Evaluates a rule from the ruleset against given source object. This extension method is just a shortcut for
            calling <see cref="M:CodeEffects.Rule.Core.Evaluator`1.Evaluate(`0,System.String)"/> method.
            <remarks>Use <see cref="T:CodeEffects.Rule.Core.Evaluator`1"/> directly if you plan on executing multiple Evaluate calls
            with the same set of rules. The rule evaluator compiles rules once per instantiating.</remarks>
            </summary>
            <typeparam name="TSource">An underlying source type of an object that will have rules evaluated against.</typeparam>
            <param name="source">An object that needs to be evaluated against a rule.</param>
            <param name="rulesetXml">A set of rules. If no rule id is provided, the first rule in the set will be executed.</param>
            <param name="ruleId">An id of a rule to be executed.</param>
            <param name="getRule">The delegate to a method used to retrieve external rules (rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the ruleset. If none are found
            an exception will be thrown.</param>
            <returns>True if rule evaluated successfully, False otherwise.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.RuleExtensions.Evaluate``1(``0,System.String,System.Int32,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Evaluates a rule from the ruleset against given source object. This extension method is just a shortcut for
            calling <see cref="M:CodeEffects.Rule.Core.Evaluator`1.Evaluate(`0,System.String)"/> method.
            <remarks>Use <see cref="T:CodeEffects.Rule.Core.Evaluator`1"/> directly if you plan on executing multiple Evaluate calls
            with the same set of rules. The rule evaluator compiles rules once per instantiating.</remarks>
            </summary>
            <typeparam name="TSource">An underlying source type of an object that will have rules evaluated against.</typeparam>
            <param name="source">An object that needs to be evaluated against a rule.</param>
            <param name="rulesetXml">A set of rules. The rule at the provided index will be executed.</param>
            <param name="ruleIndex">An index of a rule to be executed.</param>
            <param name="getRule">The delegate to a method used to retrieve external rules (rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the ruleset. If none are found
            an exception will be thrown.</param>
            <returns>True if rule evaluated successfully, False otherwise.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.RuleExtensions.GetProviderType(System.Linq.IQueryable)">
            <summary>
            This is a hack. It tries to determine whether given source has LINQ-to-SQL provider.
            It relies on the fact LINQ-to-SQL designer uses the DataQuery class which has hidden field "context" of type DataContext.
            This issue arises due to the fact that when filtering a LINQ-to-SQL generated collections, the source is of type DataQuery,
            which is an internal Microsoft class and there is no other way to verify the actual provider.
            </summary>
            <param name="source">An enumerable collection of type <see cref="T:System.Linq.IQueryable`1"/> for which a provider needs to be determined.</param>
            <returns>Returns the <see cref="T:CodeEffects.Rule.Core.LinqProviderType"/> enum.</returns>
        </member>
        <member name="T:CodeEffects.Rule.Core.ConversionVisitor">
            <summary>
            A helper class. It replaces IndexOf expressions with Contains so that Linq-to-SQL can convert them to the LIKE statement.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.DataSourceItem">
            <summary>
            Holds data of a single Dynamic Menu Data Source item.
            See Web Rule online documentation for details.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.DataSourceItem.#ctor">
            <summary>
            Public empty constructor. Sets the value of ID property to 0 (zero).
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.DataSourceItem.#ctor(System.Int32,System.String)">
            <summary>
            Public c-tor
            </summary>
            <param name="id">ID of the item</param>
            <param name="name">Display name of the item</param>
        </member>
        <member name="P:CodeEffects.Rule.Common.DataSourceItem.ID">
            <summary>
            Gets or sets the ID of the item. This ID will be stored
            in rules and used to locate proper value during rule evaluation.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.DataSourceItem.Name">
            <summary>
            Gets or sets the display name of the item. This name will appear in
            context menus and as a value element when user selects this item from a menu.
            Rule evaluation does not rely on this property.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.DataAttribute">
            <summary>
            This attribute is used to define Dynamic Menu Data Sources.
            See Web Rule online documentation for details.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.DataAttribute.#ctor(System.String,System.String)">
            <summary>
            Use this constructor to define client-side data source functions.
            </summary>
            <param name="name">Unique name of the data source that can be used to
            distinguish this method from other data source methods</param>
            <param name="clientCallbackFunctionName">Client-side function name that is used as data source</param>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.DataAttribute.#ctor(System.String,System.Type,System.String)">
            <summary>
            Use this constructor to define server-side data source methods.
            </summary>
            <param name="name">Unique name of the data source that can be used to
            distinguish this method from other data source methods</param>
            <param name="type">Type that declares this data source method</param>
            <param name="methodName">Name of the data source method</param>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.DataAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Use this constructor to define server-side data source methods.
            </summary>
            <param name="name">Unique name of the data source that can be used to
            distinguish this method from other data source methods</param>
            <param name="assemblyName">Assembly that declares the type with data source method</param>
            <param name="typeFullName">Full name of the type that declares this data source method</param>
            <param name="methodName">Name of the data source method</param>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.DataAttribute.Type">
            <summary>
            Gets the type that declares the data source method
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.DataAttribute.Assembly">
            <summary>
            Gets the assembly that declares the type with data source method
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.DataAttribute.TypeName">
            <summary>
            Gets the name of the type that declares the data source method
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.DataAttribute.Method">
            <summary>
            Gets the name of the data source method
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.DataAttribute.Name">
            <summary>
            Gets the unique name of the data source that can be used to
            distinguish this method from other data source methods
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Asp.RuleEditor">
            <summary>
            Provides Web Rule's ASP.NET client functionality
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.#ctor">
            <summary>
            Empty public c-tor.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.DataBind">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.Focus">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.FindControl(System.String)">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.Dispose">
            <summary>
            Clears the Rule Area and disposes all resources related to Web Rule
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.ToString">
            <summary>
            Returns text representation of the rule that is currently displayed in the Rule Area. Returns base.ToString() if no rules have been loaded and the Rule Area is empty.
            </summary>
            <returns>Text representation of the current rule</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.ToString(CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Returns text representation of the rule that is currently displayed in the Rule Area. Returns base.ToString() if no rules have been loaded and the Rule Area is empty.
            </summary>
            <param name="ruleDelegate">Delegate of the method that takes a rule ID and returns rule's XML string</param>
            <returns>Text representation of the current rule</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.ToString(System.Collections.Generic.Dictionary{System.String,CodeEffects.Rule.Core.GetDataSourceDelegate})">
            <summary>
            Returns text representation of the rule that is currently displayed in the Rule Area. Returns base.ToString() if no rules have been loaded and the Rule Area is empty.
            </summary>
            <param name="dataSources">Dictionary of data sources that might be used in the currently displayed rule</param>
            <returns>Text representation of the current rule</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.ToString(CodeEffects.Rule.Core.GetRuleDelegate,System.Collections.Generic.Dictionary{System.String,CodeEffects.Rule.Core.GetDataSourceDelegate})">
            <summary>
            Returns text representation of the rule that is currently displayed in the Rule Area. Returns base.ToString() if no rules have been loaded and the Rule Area is empty.
            </summary>
            <param name="ruleDelegate">Delegate of the method that takes a rule ID and returns rule's XML string</param>
            <param name="dataSources">Dictionary of data sources that might be used in the currently displayed rule</param>
            <returns>Text representation of the current rule</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetSourceXml">
            <summary>
            Returns XML document of the source objcet
            </summary>
            <returns>Xml document as string</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetHelpXml">
            <summary>
            Returns content of the default help XML document
            </summary>
            <returns>String representation of the default help XML</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetRuleXml">
            <summary>
            Returns string representation of Rule XML. Calling this method is the only way to obtain Rule XML in Web Rule.
            </summary>
            <returns>Xml document as string</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetClientSettings">
            <summary>
            Returns JSON string that contains Web Rule UI settings.
            </summary>
            <returns>Json-formatted UI settings</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetClientRuleData">
            <summary>
            Returns rule's client data. Should be used by the "client-only" RuleEditor instances.
            </summary>
            <returns>Json-formatted rule data</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetClientInvalidData">
            <summary>
            Returns JSON string that contains invalid rule members.
            </summary>
            <returns>Json-formatted array of invalid elements</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetSaveArguments">
            <summary>
            Returns save-related data
            </summary>
            <returns>Instance of the SaveEventArgs type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.LoadRuleFile(System.String)">
            <summary>
            Loads rule XML file into the RuleEditor
            </summary>
            <param name="ruleXmlFileFullPath">Full path to the rule XML file</param>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.LoadRuleXml(System.String)">
            <summary>
            Loads rule XML into the RuleEditor
            </summary>
            <param name="ruleXml">String representation of the rule XML document</param>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.LoadClientData(System.String)">
            <summary>
            Loads rule's client data into the RuleEditor.
            </summary>
            <param name="ruleClientData">Json-formatted rule data</param>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.ClearCache">
            <summary>
            Clears from server cache all items stored there by Web Rule. Items amy include source object XML and help XML.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.Clear">
            <summary>
            Removes all rule elements from the Rule Area
            </summary>
        </member>
        <member name="E:CodeEffects.Rule.Asp.RuleEditor.SaveRule">
            <summary>
            Web Rule raises this event when the user clicks the Save button on the Tool Bar.
            Ignored by Web Rule if ShowToolBar is set to False
            </summary>
        </member>
        <member name="E:CodeEffects.Rule.Asp.RuleEditor.DeleteRule">
            <summary>
            Web Rule raises this event when the user clicks the Delete button on the Tool Bar.
            Ignored by Web Rule if ShowToolBar is set to False
            </summary>
        </member>
        <member name="E:CodeEffects.Rule.Asp.RuleEditor.LoadRule">
            <summary>
            Web Rule raises this event when the user selects a rule from the Rules menu on the Tool Bar.
            Ignored by Web Rule if ShowToolBar is set to False
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ToolBarRules">
            <summary>
            Gets or sets collection of rules that appear in the Rules menu of the Tool Bar. This collection can contain
            rules of all types. This property is ignored if ShowToolBar is set to False. 
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ContextMenuRules">
            <summary>
            Gets or sets collection of rules that appear in context menus of Web Rule. This collection can contain
            only rules of evaluation type (this requirement is not enforced by Web Rule).
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.IsEmpty">
            <summary>
            Gets the value indicating whether the submitted rule is empty
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.IsValid">
            <summary>
            Gets the value indicating whether the submitted rule is valid
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.DataSources">
            <summary>
            Gets or sets collection of named Dynamic Menu Data Source delegates.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.GetRuleDelegate">
            <summary>
            Gets or sets a delegate to a method that returns rule XML by rule's ID.
            This delegate is used by rule validation procedure to check for circular
            references in the current rule. See the Reusable Rules documentation topic for details.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.HelpXml">
            <summary>
            Gets or sets the XML document of the custom help XML. HelpXml property allows you to specify
            a Help XML that contains different values for Help String messages, Tool Bar
            labels and rule validation error messages. This could be helpful for multilingual applications.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ExcludedOperators">
            <summary>
            Gets or sets collection of operators that Web Rule should exclude from using on the client
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.SourceXml">
            <summary>
            Gets or sets the value of XML document of source object used by this instance of RuleEditor.
            Use the GetSourceXml() method to obtain XML document of the current source if you intend to
            manually alter source object's XML.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Source">
            <summary>
            Gets or sets the type of source object used by this instance of RuleEditor.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.SourceXmlFile">
            <summary>
            Gets or sets the value of the full path of custom XML file that this instance of RuleEditor should use as its source object.
            Use the GetSourceXml() method to obtain XML document of the current source if you intend to
            manually alter source object's XML.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.SourceType">
            <summary>
            Gets or sets the type name of the source object. Use typeof(YourSource).FullName to obtain this value
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.SourceAssembly">
            <summary>
            Gets or sets the qualified name of the assembly that declares the source object.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.CacheSource">
            <summary>
            Gets or sets the value indicating whether the source object's data should be cached by the server.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ClientOnly">
            <summary>
            Gets or sets the value that toggles Web Rule's UI "client-only" mode
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowLineDots">
            <summary>
            Gets or sets the value that toggles "dots" at the beginning of each new line in the Rule Area
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowMenuOnRightArrowKey">
            <summary>
            Gets or sets the value that toggles the visibility of the context menu when user uses keyboard's
            "right arrow" key to navigate the rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowMenuOnElementClicked">
            <summary>
            Gets or sets the value that toggles the visibility of the context menu containing related items when user clicks a rule element
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowDescriptionsOnMouseHover">
            <summary>
            Gets or sets the value that toggles the visibility of description of rule fields, in-rule methods,
            actions and nested rules for those elements that have their descriptions set
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.RuleNameIsRequired">
            <summary>
            Gets or sets the value indicating whether Web Rule should require each rule to have a name.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowToolBar">
            <summary>
            Gets or sets the value that toggles the visibility of Tool Bar.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.KeepDeclaredOrder">
            <summary>
            Gets or sets the value indicating whether Web Rule should alphabetically order fields and actions in menus or keep the order in which they are declared in the source object. The default value is False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Mode">
            <summary>
            Gets or sets the value that defines what type of rules users can create. Value of RuleType.Evaluation
            limits Web Rule UI to evaluation type rules only. Value of RuleType.Execution permits both
            execution and evaluation types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Theme">
            <summary>
            Gets or sets the value of Web Rule UI theme. Set this property to ThemeType.None if you intend to use your own styles.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.HelpXmlFile">
            <summary>
            Gets or sets the full path to the custom help XML file. HelpXmlFile property allows you to specify
            a Help XML that contains different values for Help String messages, Tool Bar
            labels and rule valiadation error messages. This could be helpful for multilingual applications.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowHelpString">
            <summary>
            Gets or sets the value that toggles the visibility of Help String.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.CacheHelp">
            <summary>
            Gets or sets the value indicating whether Help XML should be cached by the server.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.AccessKey">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.BackImageUrl">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.BorderStyle">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.BorderWidth">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.TabIndex">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Height">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.DefaultButton">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.GroupingText">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ToolTip">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.CssClass">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Controls">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Font">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Direction">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.HorizontalAlign">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ScrollBars">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Enabled">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Wrap">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.EnableViewState">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.EnableTheming">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Client.Element">
            <summary>
            This class is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Client.Element.#ctor">
            <summary>
            This constructor is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Client.Element.Clone">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Client.Element.ToString">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Name">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Value">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Type">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.CalType">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.FuncType">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.InpType">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.ParameterType">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Oper">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Min">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Max">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Dec">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.IsDs">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Cal">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Enums">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.En">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Format">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.IsRule">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.IsInstance">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.IsOrganicParenthesis">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.NotFound">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Class">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Assembly">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.StringComparison">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.ReturnEnumClass">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.ReturnEnumAssembly">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Token">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.SourceAttribute">
            <summary>
            Allows customization of source object
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.SourceAttribute.#ctor">
            <summary>
            Empty public c-tor
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.SourceAttribute.MaxTypeNestingLevel">
            <summary>
            Gets or sets the maximum number of levels up to which Web Rule performs
            the recursive search for value type members declared by the source object.
            The default value is 4.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.SourceAttribute.DeclaredMembersOnly">
            <summary>
            Gets or sets the value indicating if Web Rule should ignore
            properties and fields it inherits from its base types.
            The default value is False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.SourceAttribute.PersistTypeNameInRuleXml">
            <summary>
            Gets or sets the value indicating if Web Rule should set the
            type name of the source object in rule XML. The default value is True.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.ReturnAttribute">
            <summary>
            Allows customization of in-rule method's return type
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ReturnAttribute.#ctor">
            <summary>
            Empty public c-tor
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ReturnAttribute.ValueInputType">
            <summary>
            Gets or sets the input type that user can use to set the value of this return type
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ReturnAttribute.Min">
            <summary>
            Gets or sets the minimum value that user can input for this return type.
            Used by numeric types only; ignored by all other types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ReturnAttribute.Max">
            <summary>
            For numeric types, gets or sets the maximum value that user can input for this return type.
            For string types, gets the maximum length of the string that user can input for this return type.
            Ignored by all other types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ReturnAttribute.DateTimeFormat">
            <summary>
            For date and time types, gets or sets the .NET DateTime format string
            that is used by Web Rule to display the value of this return type in UI.
            Rule evaluation does not depend on this property.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ReturnAttribute.AllowCalculations">
            <summary>
            For numeric types, gets or sets the value indicating whether this
            return type allows user to enter calculations as its value.
            Ignored by all other types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ReturnAttribute.StringComparison">
            <summary>
            For string types, gets or sets the string comparison type for this return type.
            The default value is StringComparison.OrdinalIgnoreCase.
            Ignored by all other types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ReturnAttribute.DataSourceName">
            <summary>
            Gets or sets the value of the unique name of Dynamic Menu Data Source.
            See Web Rule online documentation for details.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Resource.Errors">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;codeeffects&gt;
            	&lt;values&gt;
            		&lt;s100&gt;In order to load source data, the following must be true: a.) The property &quot;SourceXml&quot; must contain valid source XML, or b.) The &quot;SourceXmlFile&quot; must contain the virtual path to an existing source XML file, or c.) The properties &quot;SourceType&quot; and &quot;SourceAssembly&quot; must contain full names of the assembly and type of your source object.&lt;/s100&gt;
            		&lt;s101&gt;Assembly or type names cannot be null references or empty strings.&lt;/s101&gt;
            		&lt;s102&gt;The [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:CodeEffects.Rule.Resource.FilterHelp">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;codeeffects&gt;
            	&lt;help&gt;
            		&lt;i101&gt;Click inside of the Filter Area to begin a new filter&lt;/i101&gt;
            		&lt;i102&gt;Click anywhere inside of the Filter Area to modify the filter&lt;/i102&gt;
            		&lt;i103&gt;Select a field or parenthesis from the menu; hit Space Bar if it&apos;s hidden&lt;/i103&gt;
            		&lt;i104&gt;Select an operator from the menu; hit Space Bar if it&apos;s hidden&lt;/i104&gt;
            		&lt;i105&gt;Type the value; use Backspace to delete, Enter or Right Arrow to complete&lt;/i105&gt;
            		&lt;i106&gt;Select calculation elements from [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:CodeEffects.Rule.Resource.RuleHelp">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;codeeffects&gt;
            	&lt;help&gt;
            		&lt;i101&gt;Click inside of the Rule Area to begin a new rule&lt;/i101&gt;
            		&lt;i102&gt;Click anywhere inside of the Rule Area to modify the rule&lt;/i102&gt;
            		&lt;i103&gt;Select a field or parenthesis from the menu; hit Space Bar if it&apos;s hidden&lt;/i103&gt;
            		&lt;i104&gt;Select an operator from the menu; hit Space Bar if it&apos;s hidden&lt;/i104&gt;
            		&lt;i105&gt;Type the value; use Backspace to delete, Enter or Right Arrow to complete&lt;/i105&gt;
            		&lt;i106&gt;Select calculation elements from the men [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:CodeEffects.Rule.Mvc.ScriptManager">
            <summary>
            Web Rule script manager class
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.ExternalMethodAttribute">
            <summary>
            Allows customization of external in-rule method
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ExternalMethodAttribute.#ctor(System.Type,System.String)">
            <summary>
            Public c-tor
            </summary>
            <param name="type">Type that declares the method</param>
            <param name="methodName">Declared name of the method</param>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ExternalMethodAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Public c-tor
            </summary>
            <param name="assemblyName">Fully qualified name of the assembly that declares the method type</param>
            <param name="typeFullName">Full name of the type that declares the method</param>
            <param name="methodName">Declared name of the method</param>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ExternalMethodAttribute.Type">
            <summary>
            Gets the type that declares the method
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ExternalMethodAttribute.Assembly">
            <summary>
            Gets the fully qualified name of the assembly that declares the method type
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ExternalMethodAttribute.TypeName">
            <summary>
            Gets the full name of the type that declares the method
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ExternalMethodAttribute.Method">
            <summary>
            Gets the declared name of the method
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.DataSourceHolder.Name">
            <summary>
            Gets or sets the unique name of this data source that can be used to
            distinguish this delegate from all other data source methods. This is
            the same name used by FieldAttribute.DataSourceName,
            ReturnAttribute.DataSourceName and ParameterAttribute.DataSourceName properties.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.DataSourceHolder.Delegate">
            <summary>
            Gets or sets signature of a method that takes nothing and returns a list
            of data source items used by Dynamic Menu Data Source feature of Web Rule.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.EvaluationException">
            <summary>
            Used by Web Rule for rule evaluation-related exceptions
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.RuleException">
            <summary>
            Base class for all rule-related exception types. This exception can be thrown on generic rule-related issues
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.RuleException.#ctor(System.String)">
            <summary>
            The RuleException type is not intended for public use
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CodeEffects.Rule.Common.RuleException.#ctor(System.String,System.String[])">
            <summary>
            The RuleException type is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.RuleException.Message">
            <summary>
            Message containing details of the exception
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.RuleException.Number">
            <summary>
            Internal Web Rule number of the exception being thrown. Use this number when contacting customer support.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.EvaluationException.#ctor(System.String)">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.EvaluationException.#ctor(System.String,System.String[])">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Returns.StringComparison">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.MenuItem">
            <summary>
            Usually used to represent a single reusable rule in Tool Bar menus
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.MenuItem.#ctor">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.MenuItem.#ctor(System.String,System.String)">
            <summary>
            Public c-tor
            </summary>
            <param name="id">Sets the ID property of this instance of MenuItem class</param>
            <param name="displayName">Sets the DisplayName property of this instance of MenuItem class</param>
        </member>
        <member name="M:CodeEffects.Rule.Common.MenuItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Public c-tor
            </summary>
            <param name="id">Sets the ID property of this instance of MenuItem class</param>
            <param name="displayName">Sets the DisplayName property of this instance of MenuItem class</param>
            <param name="description">Sets the Description property of this instance of MenuItem class</param>
        </member>
        <member name="M:CodeEffects.Rule.Common.MenuItem.ToString">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.MenuItem.ID">
            <summary>
            Gets or sets the ID of the menu item.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.MenuItem.DisplayName">
            <summary>
            Gets or sets the display name of the menu item.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.MenuItem.Description">
            <summary>
            Optional. Gets or sets the description of the menu item.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Asp.RuleEventHandler">
            <summary>
            Defines the type of the DeleteRule and LoadRule public events
            of the CodeEffects.Rule.Asp.RuleEditor class.
            </summary>
            <param name="sender">Instance of the Asp.RuleEditor class</param>
            <param name="e">Event data</param>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.FieldAttribute">
            <summary>
            Allows customization of rule field
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.FieldAttribute.#ctor">
            <summary>
            Empty public c-tor
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.FieldAttribute.ValueInputType">
            <summary>
            Gets or sets the input type that user can use to set the value of this field
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.FieldAttribute.DisplayName">
            <summary>
            Gets or sets the label that will be used in UI to represent this field
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.FieldAttribute.Description">
            <summary>
            Gets or sets the description of this field. Users can view this description
            by hovering the mouse over the field in the Rule Editor. 
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.FieldAttribute.Min">
            <summary>
            Gets or sets the minimum value that user can input for this field.
            Used by numeric types only; ignored by all other types
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.FieldAttribute.Max">
            <summary>
            For numeric types, gets or sets the maximum value that user can input for this field.
            For string types, gets the maximum length of the string that user can input for this field.
            Ignored by all other types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.FieldAttribute.DateTimeFormat">
            <summary>
            For date and time types, gets or sets the .NET DateTime format string
            that is used by Web Rule to display the value of this field in UI.
            Rule evaluation does not depend on this property.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.FieldAttribute.AllowCalculations">
            <summary>
            For numeric types, gets or sets the value indicating whether this
            field allows user to enter calculations as its value.
            Ignored by all other types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.FieldAttribute.IncludeInCalculations">
            <summary>
            For numeric types, gets or sets the value indicating whether this
            field can be included in value calculations of other fields.
            Ignored by all other types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.FieldAttribute.StringComparison">
            <summary>
            For string types, gets or sets the string comparison type for this field.
            The default value is StringComparison.OrdinalIgnoreCase.
            Ignored by all other types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.FieldAttribute.DataSourceName">
            <summary>
            Gets or sets the value of the unique name of Dynamic Menu Data Source.
            See Web Rule online documentation for details.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.RuleType">
            <summary>
            Used by RuleEditor class to specify the current MOde of the rule editor
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.RuleType.Execution">
            <summary>
            This member sets the mode of the rule editor that allows users
            to create rules of both types - evaluation and execution.
            In this mode Web Rule uses rule-related labels from Help XML.
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.RuleType.Evaluation">
            <summary>
            This member sets the mode of the rule editor that allows users
            to create only evaluation type rules.
            In this mode Web Rule uses rule-related labels from Help XML.
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.RuleType.Filter">
            <summary>
            This member sets the mode of the rule editor that allows users
            to create only evaluation type rules.
            In this mode Web Rule uses filter-related labels from Help XML.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Asp.SaveEventHandler">
            <summary>
            Defines the type of the SaveRule public event
            of the CodeEffects.Rule.Asp.RuleEditor class.
            </summary>
            /// <param name="sender">Instance of the Asp.RuleEditor class</param>
            <param name="e">Event data</param>
        </member>
        <member name="T:CodeEffects.Rule.Asp.SaveEventArgs">
            <summary>
            Arguments used by SaveRule event of the ...Asp.RuleEditor class
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.SaveEventArgs.#ctor">
            <summary>
            Empty public c-tor
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.SaveEventArgs.RuleID">
            <summary>
            Gets or sets the ID of the rule. By default, Web Rule uses Guid values for rule IDs.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.SaveEventArgs.RuleName">
            <summary>
            Gets or sets the name of the rule. Users set this value by
            typing the rule's name into the Name text box of the Tool Bar
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.SaveEventArgs.RuleDescription">
            <summary>
            Gets or sets the description of the rule. Users set this value by
            typing the rule's description into the Description text box of the Tool Bar
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.SaveEventArgs.RuleXmlAsDocument">
            <summary>
            Gets or sets the full XML document that contains the rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.SaveEventArgs.RuleXmlAsNode">
            <summary>
            Gets or sets the XML node of the rule. Useful when saving rules as a single large ruleset document.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.SaveEventArgs.IsEvaluationTypeRule">
            <summary>
            Gets or sets the value indicating if the rule is of evaluation type.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.SaveEventArgs.ReferencedRules">
            <summary>
            Gets or sets the list of IDs of all reusable rules referenced in this rule
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.MethodAttribute">
            <summary>
            Allows customization of in-rule method
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.MethodAttribute.#ctor">
            <summary>
            Empty public c-tor.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.MethodAttribute.#ctor(System.String)">
            <summary>
            Public c-tor.
            </summary>
            <param name="displayName">The label that will be used to represent this method on UI.</param>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.MethodAttribute.#ctor(System.String,System.String)">
            <summary>
            Public c-tor.
            </summary>
            <param name="displayName">The label that will be used to represent this method on UI.</param>
            <param name="description">Description of this method.</param>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.MethodAttribute.DisplayName">
            <summary>
            Gets or sets the label that will be used to represent this method on UI.
            If not set, the declared name of the method will be used.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.MethodAttribute.Description">
            <summary>
            Gets or sets the description of this method. Users can view this description
            by hovering the mouse over the method in the Rule Editor. 
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Mvc.StyleManager">
            <summary>
            Web Rule style manager
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Mvc.RuleEditor">
            <summary>
            Provides Web Rule MVC UI functionality
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.#ctor(System.String)">
            <summary>
            Public c-tor
            </summary>
            <param name="id">ID of this instance of Web Rule component</param>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.#ctor(System.Web.Mvc.ViewContext)">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.Render">
            <summary>
            Renders this instance of RuleEditor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.GetClientSettings">
            <summary>
            Returns Web Rule UI settings. Should be used by the "client-only" RuleEditor instances.
            </summary>
            <returns>Json-formatted UI settings</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.GetClientRuleData">
            <summary>
            Returns rule's client data. Should be used by the "client-only" RuleEditor instances.
            </summary>
            <returns>Json-formatted rule data</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.LoadClientData(System.String)">
            <summary>
            Loads rule's client data into the RuleEditor.
            </summary>
            <param name="ruleClientData">Json-formatted rule data</param>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.GetClientInvalidData">
            <summary>
            Returns data of the invalid rule members. Should be used by the "client-only" RuleEditor instances.
            </summary>
            <returns>Json-formatted array of invalid elements</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.GetSourceXml">
            <summary>
            Returns XML document of the source object
            </summary>
            <returns>Xml document as string</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.GetHelpXml">
            <summary>
            Returns the string representation of the default Help XML document. Use this document as a template for custom help documents.
            </summary>
            <returns>String representation of the default help XML</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.ToString">
            <summary>
            Returns text representation of the rule that is currently displayed in the Rule Area. Returns base.ToString() if no rules have been loaded and the Rule Area is empty.
            </summary>
            <returns>Text representation of the current rule</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.ToString(CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Returns text representation of the rule that is currently displayed in the Rule Area. Returns base.ToString() if no rules have been loaded and the Rule Area is empty.
            </summary>
            <param name="ruleDelegate">Delegate of the method that takes a rule ID and returns rule's XML string</param>
            <returns></returns>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.Id">
            <summary>
            Gets or sets server ID of the instance of RuleEditor. Used to distinguish this instance from
            all other instances that may be declared on the same view. The value of this property should
            be unique for the current view. This requirement is not enforced by Web Rule.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.SaveController">
            <summary>
            Gets or sets the name of the controller that declares the Save action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.SaveAction">
            <summary>
            Gets or sets the name of the Save action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.DeleteController">
            <summary>
            Gets or sets the name of the controller that declares the Delete action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.DeleteAction">
            <summary>
            Gets or sets the name of the Delete action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.LoadController">
            <summary>
            Gets or sets the name of the controller that declares the Load action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.LoadAction">
            <summary>
            Gets or sets the name of the Load action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.HelpXml">
            <summary>
            Gets or sets the XML document of the custom help XML. HelpXml property allows you to specify
            a Help XML that contains different values for Help String messages, Tool Bar
            labels and rule validation error messages. This could be helpful for multilingual applications.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.HelpXmlFile">
            <summary>
            Gets or sets the full path to the custom help XML file. HelpXmlFile property allows you to specify
            a Help XML that contains different values for Help String messages, Tool Bar
            labels and rule validation error messages. This could be helpful for multilingual applications.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowHelpString">
            <summary>
            Gets or sets the value that toggles the visibility of Help String.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowLineDots">
            <summary>
            Gets or sets the value that toggles "dots" at the beginning of each new line in the Rule Area
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowMenuOnRightArrowKey">
            <summary>
            Gets or sets the value that toggles the visibility of the context menu when user uses keyboard's
            "right arrow" key to navigate the rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowMenuOnElementClicked">
            <summary>
            Gets or sets the value that toggles the visibility of the context menu when user clicks a rule element
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowDescriptionsOnMouseHover">
            <summary>
            Gets or sets the value that toggles the visibility of description of rule fields, in-rule methods,
            actions and nested rules for those elements that have their descriptions set
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowToolBar">
            <summary>
            Gets or sets the value that toggles the visibility of Tool Bar.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.KeepDeclaredOrder">
            <summary>
            Gets or sets the value indicating whether Web Rule should alphabetically order fields and actions in menus or keep the order in which they are declared in the source object. The default value is False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.Mode">
            <summary>
            Gets or sets the value that defines what type of rules users can create. Value of RuleType.Evaluation
            limits Web Rule UI to evaluation type rules only. Value of RuleType.Execution permits both
            execution and evaluation types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.Theme">
            <summary>
            This property is not intended for public use. Use the StyleManager class instead.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ClientOnly">
            <summary>
            Gets or sets the value that toggles Web Rule's UI "client-only" mode
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ToolBarRules">
            <summary>
            Gets or sets collection of rules that appear in the Rules menu of the Tool Bar. This collection can contain
            rules of all types. This property is ignored if ShowToolBar is set to False. 
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ContextMenuRules">
            <summary>
            Gets or sets collection of rules that appear in context menus of Web Rule. This collection can contain
            only rules of evaluation type (this requirement is not enforced by Web Rule).
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ExcludedOperators">
            <summary>
            Gets or sets collection of operators that Web Rule should exclude from using on the client
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.DataSources">
            <summary>
            Gets or sets collection of named Dynamic Menu Data Source delegates.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.Rule">
            <summary>
            Gets or sets the rule model
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.SourceException">
            <summary>
            Used by Web Rule for source object-related exceptions
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.SourceException.#ctor(System.String)">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.SourceException.#ctor(System.String,System.String[])">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.ValueInputType">
            <summary>
            Defines the input type that user can use to set the value of particular field
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ValueInputType.Fields">
            <summary>
            Only allows selection of other fields, in-rule methods or reusable rules
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ValueInputType.User">
            <summary>
            Only allows user to input the value or pick it from predefined ranges
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ValueInputType.All">
            <summary>
            Allows all types of value input
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.EnumItemAttribute">
            <summary>
            Used to define the UI label of enum member
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.EnumItemAttribute.#ctor(System.String)">
            <summary>
            Public c-tor
            </summary>
            <param name="displayName">Label that will be used to represent this enum member on UI.</param>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.EnumItemAttribute.DisplayName">
            <summary>
            Gets or sets the label that will be used to represent this enum member on UI.
            If not set, the declared name of the member will be used.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.MalformedXmlException">
            <summary>
            Used by Web Rule for XML validation-related exceptions
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.MalformedXmlException.#ctor(System.String)">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.MalformedXmlException.#ctor(System.String,System.String[])">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.InvalidRuleException">
            <summary>
            Used by Web Rule for rule validation-related exceptions
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.InvalidRuleException.#ctor(System.String)">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.InvalidRuleException.#ctor(System.String,System.String[])">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Models.RuleDataTypeConverter">
            <summary>
            This class is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleDataTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleDataTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleDataTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleDataTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleDataTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Asp.RuleEventArgs">
            <summary>
            Argu,emts used by DeleteRule and LoadRule events of the ...Asp.RuleEditor class
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEventArgs.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Public c-tor
            </summary>
            <param name="id">Rule ID</param>
            <param name="isEval">Indicates if the rule is of evaluation type.</param>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEventArgs.RuleID">
            <summary>
            Gets or sets the ID of the rule. By default, Web Rule uses Guid values for rule IDs.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEventArgs.IsEvaluationTypeRule">
            <summary>
            Gets or sets the value indicating if the rule is of evaluation type.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Models.ExcludedOperator">
            <summary>
            This enum can be used to exclude unwanted operators from being used by rule editor.
            This lowers the amount of data that Web Rule sends to the client on page load.
            See the ExcludedOperators properties of ...Mvc.RuleEditor and ...Asp.RuleEditor classes.
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.Equal">
            <summary>
            Exclude the Equal operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.NotEqual">
            <summary>
            Exclude the NotEqual operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.Less">
            <summary>
            Exclude the Less operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.LessOrEqual">
            <summary>
            Exclude the LessOrEqual operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.Greater">
            <summary>
            Exclude the Greater operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.GreaterOrEqual">
            <summary>
            Exclude the GreaterOrEqual operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.Contains">
            <summary>
            Exclude the Contains operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.DoesNotContain">
            <summary>
            Exclude the DoesNotContain operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.EndsWith">
            <summary>
            Exclude the EndsWith operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.DoesNotEndWith">
            <summary>
            Exclude the DoesNotEndWith operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.StartsWith">
            <summary>
            Exclude the StartsWith operator
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Models.ExcludedOperator.DoesNotStartWith">
            <summary>
            Exclude the DoesNotStartWith operator
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.ExternalActionAttribute">
            <summary>
            Allows customization of external rule actions
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ExternalActionAttribute.#ctor(System.Type,System.String)">
            <summary>
            Public c-tor
            </summary>
            <param name="type">Type that declares the action</param>
            <param name="methodName">Declared name of the action</param>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ExternalActionAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Public c-tor
            </summary>
            <param name="assemblyName">Fully qualified name of the assembly that declares the action type</param>
            <param name="typeFullName">Full name of the type that declares the action</param>
            <param name="methodName">Declared name of the action</param>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ExternalActionAttribute.Type">
            <summary>
            Gets the type that declares the action
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ExternalActionAttribute.Assembly">
            <summary>
            Gets the fully qualified name of the assembly that declares the action type
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ExternalActionAttribute.TypeName">
            <summary>
            Gets the full name of the type that declares the action
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ExternalActionAttribute.Method">
            <summary>
            Gets the declared name of the action
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.ParentAttribute">
            <summary>
            Used to distinguish between multiple fields of the same reference type declared by the source object.
            See Web Rule online documentation for details.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ParentAttribute.#ctor(System.String,System.String)">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ParentAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Public c-tor
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ParentAttribute.ParentName">
            <summary>
            Gets the declared property name
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ParentAttribute.DisplayName">
            <summary>
            Gets the label that represents this type in UI
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ParentAttribute.Description">
            <summary>
            Gets the description of this type used in UI
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.ThemeType">
            <summary>
            Web Rule CSS themes
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ThemeType.Gray">
            <summary>
            Gray theme
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ThemeType.White">
            <summary>
            White theme
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ThemeType.Green">
            <summary>
            Green theme
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ThemeType.Red">
            <summary>
            Red theme
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ThemeType.Black">
            <summary>
            Black theme
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ThemeType.Blue">
            <summary>
            Blue theme
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ThemeType.Navy">
            <summary>
            Navy theme
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.ThemeType.None">
            <summary>
            No theme
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.Xml">
            <summary>
            XML utility class
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.Xml.GetEmptyRuleDocument(CodeEffects.Rule.Common.RuleFormatType)">
            <summary>
            Returns an empty Rule XML document
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.Xml.IsRuleValid(System.Xml.XmlDocument)">
            <summary>
            Validates Rule XML document against its current schema.
            </summary>
            <param name="sourceXml">Source XML document</param>
        </member>
        <member name="P:CodeEffects.Rule.Common.Xml.RuleNamespace">
            <summary>
            Gets the Rule XML namespace (location of Rule XML schema) used by the current version of Web Rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.Xml.UiNamespace">
            <summary>
            Gets the UI XML sub-namespace (location of UI XML schema) used by the current version of Web Rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.Xml.SourceNamespace">
            <summary>
            Gets the Source XML namespace (location of Source XML schema) used by the current version of Web Rule
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Core.GetDataSourceDelegate">
            <summary>
            Declares a signature of a method that takes nothing and returns a list
            of data source items used by Dynamic Menu Data Source feature of Web Rule.
            See Web Rule online documentation for details.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.ActionAttribute">
            <summary>
            Allows customization of rule actions
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ActionAttribute.#ctor">
            <summary>
            Empty public c-tor.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ActionAttribute.#ctor(System.String)">
            <summary>
            Public c-tor.
            </summary>
            <param name="displayName">The label that will be used to represent this action on UI.</param>
        </member>
        <member name="M:CodeEffects.Rule.Attributes.ActionAttribute.#ctor(System.String,System.String)">
            <summary>
            Public c-tor.
            </summary>
            <param name="displayName">The label that will be used to represent this action on UI.</param>
            <param name="description">Description of this action.</param>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ActionAttribute.DisplayName">
            <summary>
            Gets or sets the label that will be used to represent this action on UI.
            If not set, the declared name of the method will be used.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Attributes.ActionAttribute.Description">
            <summary>
            Gets or sets the description of this action. Users can view this description when
            they hover the mouse over the action in the Rule Editor. 
            </summary>
        </member>
    </members>
</doc>
